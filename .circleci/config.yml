version: 2

jobs:
    build:
        environment:
            TZ: "/usr/share/zoneinfo/America/Detroit"
        working_directory: ~/app
        machine: true

        steps:
            ##
            # SETUP
            ##
            - run:
                name: Flag local build
                command: |
                  if [[ "$CIRCLE_BUILD_NUM" == '' ]]; then
                    touch ~/.localCircleBuild
                    echo 'ERROR: this repo does not support local CircleCI builds because it requires the "machine" executor type.'
                    exit 1
                  fi
            - add_ssh_keys
            - checkout
            - run:
                name: Validate PR
                command: |
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    bash .devops/validate-pr.sh
                  fi
            - run:
                name: Install jq
                command: |
                  sudo curl -sSL -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
                  sudo chmod +x /usr/local/bin/jq
            - run:
                name: Calculate codebase version
                command: |
                  git config --global user.email "$ESGBOT_GIT_EMAIL" && git config --global user.name "$ESGBOT_GIT_NAME"
                  bash .devops/calculate-app-version.sh
                  bash .devops/semverTo440.sh
                  sed -i -e "s/__version__ = .*/__version__ = '$(cat ~/.version440)'/" auklet/__about__.py
                  VERSION_SIMPLE=$(cat ~/.version | xargs | cut -f1 -d"+")
                  sed -i -e "s/__semver__ = .*/__semver__ = '$VERSION_SIMPLE'/" auklet/__about__.py
            - run:
                name: Install Python 3.6.3
                command: |
                  pyenv install 3.6.3
                  pyenv global 3.6.3
            - run:
                name: Show Python3 Version
                command: |
                  python3 --version
            - run:
                name: Upgrade Docker Compose
                command: |
                  set -x
                  curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` > ./docker-compose
                  chmod +x ./docker-compose
                  sudo mv ./docker-compose /usr/local/bin
            - run:
                name: Show Docker Versions
                command: |
                  set -x
                  docker --version
                  docker-compose --version

            ##
            # RESTORE CACHES
            ##
            - restore_cache:
                key: v1-whitesource-cache-{{ checksum "requirements.txt" }}
            - restore_cache:
                key: v1-pip-cache-{{ arch }}-{{ checksum "requirements.txt" }}
            - run:
                name: Ensure caches exist
                command: |
                  mkdir -p ~/.cache/pip ~/.whitesource-pip

            ##
            # TESTS
            ##
            - run:
                name: Run Whitesource
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    bash .devops/whitesource.sh
                  fi
            - run:
                name: Run Unit Tests
                command: |
                  if [[ -f ~/.localCircleBuild ]]; then
                    CIRCLE_LOCAL_BUILD=true
                  else
                    CIRCLE_LOCAL_BUILD=false
                  fi
                  bash .devops/test_and_coverage.sh $CIRCLE_LOCAL_BUILD
            - store_artifacts:
                path: /app/tmp/htmlcov

            ##
            # DOCKER
            ##
            - run:
                name: Build Docker Benchmark Tests
                command: |
                  set -x
                  docker-compose build
            - run:
                name: Run Docker Benchmark Tests
                command: |
                  set -x
                  docker-compose run benchmark bash /compose/benchmark/startBenchmark.sh

            ##
            # SAVE CACHES
            ##
            - save_cache:
                key: v1-whitesource-cache-{{ checksum "requirements.txt" }}
                paths:
                    - /home/circleci/.whitesource-pip
            - save_cache:
                key: v1-pip-cache-{{ arch }}-{{ checksum "requirements.txt" }}
                paths:
                    - /home/circleci/.cache/pip

            ##
            # DEPLOYMENT
            ##
            - run:
                name: Deploy Edge (If staging)
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    if [ "${CIRCLE_BRANCH}" == "edge" ]; then
                      bash .devops/deploy.sh staging
                    fi
                  fi
            - run:
                name: Deploy QA (If master)
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                      bash .devops/deploy.sh qa
                      bash .devops/post-release.sh
                      # Need to checkout master again so we can run more scripts.
                      git checkout master
                      bash .devops/updateProdReleasePr.sh
                    fi
                  fi
            - run:
                name: Deploy Production (If production)
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    if [ "${CIRCLE_BRANCH}" == "production" ]; then
                      bash .devops/deploy.sh production
                      bash .devops/post-release.sh
                    fi
                  fi
